services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    hostname: sonarr
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${UPUID}
      - PGID=${UPGID}
      - TZ=${TZ}
    volumes:
      - ${HOME}/dockerc/mediamanager/sonarr:/config
      - ${HOME}/media:/media
    networks:
      - public
    # ports:
    #   - "8989:8989"

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    hostname: radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${UPUID}
      - PGID=${UPGID}
      - TZ=${TZ}
    volumes:
      - ${HOME}/dockerc/mediamanager/radarr:/config
      - ${HOME}/media:/media
    networks:
      - public
    # ports:
    #   - "7878:7878"

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    hostname: jellyfin
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - PUID=${UPUID}
      - PGID=${UPGID}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_URL:-http://10.6.0.100:8096}
      - JELLYFIN_FFmpeg__probesize=50000000
      - JELLYFIN_FFmpeg__analyzeduration=50000000
    volumes:
      - ${HOME}/dockerc/mediamanager/jellyfin:/config
      - ${HOME}/media:/media
    tmpfs:
      - /transcode:size=8G,mode=1777
    deploy:
      resources:
        limits:
          cpus: '0'  # Use all available CPU cores
          memory: 12G
        reservations:
          memory: 2G
    sysctls:
      - net.ipv4.tcp_keepalive_time=120
      - net.ipv4.tcp_keepalive_intvl=30
      - net.ipv4.tcp_keepalive_probes=3
    networks:
      public:
        ipv4_address: 10.6.0.100
    # ports:
    #   - "8096:8096"
    #   - "8920:8920"
    #   - "7359:7359/udp"
    #   - "1900:1900/udp"

networks:
  public:
    external: true
